{
  "name": "aws-serverless-express-example",
  "version": "2.1.1",
  "description": "Example application for running a Node Express app on AWS Lambda using Amazon API Gateway.",
  "main": "src/lambda.js",
  "config": {
    "s3BucketName": "test-carabao-lambda-express",
    "region": "ap-southeast-1",
    "cloudFormationStackName": "dev-carabao-serverless-express",
    "functionName": "carabao-serverless-express",
    "accountId": "091184759410",
    "stageName": "dev"
  },
  "scripts": {
    "start": "node ./src/app.local.js",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "local": "node scripts/local",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region --parameter-overrides StageParameter=$npm_package_config_stageName",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "(aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "build-layer": "node ./scripts/layer.js",
    "win-config": "npm run config",
    "win-deconfig": "npm run deconfig",
    "win-local": "npm run local",
    "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
    "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region% --parameter-overrides StageParameter=%npm_package_config_stageName%",
    "win-package-deploy": "npm run win-package && npm run win-deploy",
    "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
    "win-setup": "(aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-build-layer && npm run win-package-deploy",
    "win-build-layer": "node ./scripts/layer.js"
  },
  "dependencies": {
    "aws-serverless-express": "^3.3.8",
    "body-parser": "^1.17.1",
    "compression": "^1.6.2",
    "cors": "^2.8.3",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "lodash": ">=4.17.19",
    "mysql2": "^2.2.5",
    "pug": "^2.0.4",
    "sequelize": "^5.22.3",
    "sequelize-auto": "^0.6.7"
  },
  "devDependencies": {
    "babel-register": "^6.26.0",
    "sequelize-cli": "^6.2.0"
  }
}
